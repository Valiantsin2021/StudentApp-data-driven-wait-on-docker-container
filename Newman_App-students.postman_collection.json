{
	"info": {
		"_postman_id": "b80028ed-01fe-48f1-9281-05f0c976c14e",
		"name": "Newman App-students",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19372436"
	},
	"item": [
		{
			"name": "POST 1000 students from CSV file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"firstName\": \"{{firstName}}\",\r\n        \"lastName\": \"{{lastName}}\",\r\n        \"email\": \"{{email}}\",\r\n        \"programme\": \"{{programme}}}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8085/student",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET created student from CSV file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    console.log(pm.response.json().id)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8085/student/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"student",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete 1000 students from CSV file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"    pm.test(\"Status code is 204\", function () {\r",
							"        pm.response.to.have.status(204);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8085/student/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"student",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET created student from CSV file Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8085/student/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8085",
					"path": [
						"student",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "101",
			"type": "string"
		},
		{
			"key": "firstName",
			"value": "test",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "test",
			"type": "string"
		},
		{
			"key": "email",
			"value": "email@email.com",
			"type": "string"
		},
		{
			"key": "programme",
			"value": "test",
			"type": "string"
		}
	]
}